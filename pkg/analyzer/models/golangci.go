package models

// GolangCIIssue represents an issue found by the GolangCI linter
type GolangCIIssue struct {
	FromLinter           string              `json:"FromLinter"`
	Text                 string              `json:"Text"`
	SourceLines          []string            `json:"SourceLines"`
	Pos                  GolangCIPosition    `json:"Pos"`
	ExpectNoLint         bool                `json:"ExpectNoLint"`
	ExpectedNoLintLinter string              `json:"ExpectedNoLintLinter"`
	Replacement          GolangCIReplacement `json:"Replacement"`
}

// GolangCIReplacement represents a replacement for an issue found by the GolangCI linter
type GolangCIReplacement struct {
	Line int    `json:"Line"`
	Text string `json:"Text"`
}

// GolangCIPosition represents the position of an issue in the source code
type GolangCIPosition struct {
	Filename string `json:"Filename"`
	Offset   int    `json:"Offset"`
	Line     int    `json:"Line"`
	Column   int    `json:"Column"`
}

// GolangCILinter represents a linter used by GolangCI
type GolangCILinter struct {
	Name             string `json:"Name"`
	Enabled          bool   `json:"Enabled,omitempty"`
	EnabledByDefault bool   `json:"EnabledByDefault,omitempty"`
}

// GolangCIReport represents a report generated by GolangCI
type GolangCIReport struct {
	Linters []GolangCILinter `json:"Linters"`
}

// GolangCILintReport represents a report generated by GolangCI linter
type GolangCILintReport struct {
	Issues []GolangCIIssue `json:"Issues"`
	Report GolangCIReport  `json:"Report"`
}
