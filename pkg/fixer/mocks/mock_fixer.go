// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kazemisoroush/code-refactor-tool/pkg/fixer (interfaces: Fixer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFixer is a mock of Fixer interface.
type MockFixer struct {
	ctrl     *gomock.Controller
	recorder *MockFixerMockRecorder
}

// MockFixerMockRecorder is the mock recorder for MockFixer.
type MockFixerMockRecorder struct {
	mock *MockFixer
}

// NewMockFixer creates a new mock instance.
func NewMockFixer(ctrl *gomock.Controller) *MockFixer {
	mock := &MockFixer{ctrl: ctrl}
	mock.recorder = &MockFixerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFixer) EXPECT() *MockFixerMockRecorder {
	return m.recorder
}

// FixIssues mocks base method.
func (m *MockFixer) FixIssues(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FixIssues", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// FixIssues indicates an expected call of FixIssues.
func (mr *MockFixerMockRecorder) FixIssues(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FixIssues", reflect.TypeOf((*MockFixer)(nil).FixIssues), arg0)
}
